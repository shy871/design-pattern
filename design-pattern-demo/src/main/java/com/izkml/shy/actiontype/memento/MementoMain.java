package com.izkml.shy.actiontype.memento;

/**
 * @author: shy
 * @description: 备忘录模式
 *
 *   角色：
 *   (1)发起人Originator:
 *      一个普通类，可以创建一个备忘录，并存储它的当前内部状态，也可以使用备忘录来恢复其内部状态，一般将需要保存内部状态的类设计为原发器。
 *   (2)备忘录Memento:
 *      存储原发器的内部状态，根据原发器来决定保存哪些内部状态。备忘录的设计一般可以参考原发器的设计，根据实际需要确定备忘录类中的属性。
 *   需要注意的是，除了原发器本身与负责人类之外，备忘录对象不能直接供其他类使用，原发器的设计在不同的编程语言中实现机制会有所不同。
 *   (3)负责人Caretaker:
 *      负责人又称为管理者，它负责保存备忘录，但是不能对备忘录的内容进行操作或检查。
 *      在负责人类中可以存储一个或多个备忘录对象，它只负责存储对象，而不能修改对象，也无须知道对象的实现细节。
 *      Caretaker可以使用Stack<>来存储多个备忘录对象。
 *
 *
 * @create: 2019-03-20 13:34
 **/

public class MementoMain {

    public static void main(String[] args){

    }


}
